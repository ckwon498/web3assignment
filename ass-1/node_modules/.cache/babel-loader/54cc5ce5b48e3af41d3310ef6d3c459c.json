{"ast":null,"code":"var _jsxFileName = \"/Users/Chrisu/Desktop/web3assignment-master/ass-1/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchTitle = e => {\n      let curList = [];\n      let newList = [];\n\n      if (e.target.value !== \"\") {\n        curList = this.state.movies;\n        newList = curList.filter(titles => {\n          const lc = titles.toLowerCase();\n          const filter = e.target.value.toLowerCase();\n          return lc.includes(filter);\n        });\n      } else {\n        newList = this.state.movies;\n      }\n\n      this.setState({\n        filtered: newList\n      });\n    };\n\n    this.filterTitle = titleFilter => {\n      let filteredByTitles = this.state.movies;\n      let newTitleFilter = filteredByTitles.filter(movies => {\n        let titleName = movies.title.toLowerCase();\n        let newTitleFilter = titleFilter.toLowerCase();\n        return movies.indexOf(newTitleFilter === titleName);\n      });\n      this.setState({\n        filteredByTitles\n      });\n      alert(this.state.filteredByTitles);\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.updateState = () => {\n      console.log(this.state.isLoading); //Checks if local storage is set and if there is a state\n\n      if (localStorage.getItem(\"moviesAPI\") !== null) {\n        //this.sortLS();\n        console.log(\"API exists in Local Storage\");\n        this.setState({\n          movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n          isLoading: false\n        }); // this.sortByTitle();\n      } else {\n        console.log(\"API does not exist in Local Storage\");\n      }\n    };\n\n    this.handleAddFav = movie => {\n      let currentFav = this.state.favourites.slice(0);\n      let newFav = [...currentFav];\n      newFav.push(movie);\n      console.log(newFav);\n\n      if (!currentFav.includes(movie.id)) {\n        this.setState({\n          favourites: newFav\n        });\n        console.log(this.state.favourites);\n        localStorage.setItem(\"altFav\", newFav);\n      }\n\n      if (this.state.favourites.find(m => m.title === movie.title)) {\n        this.handleDeleteFav(movie);\n      }\n    };\n\n    this.handleDeleteFav = movie => {\n      const list = this.state.favourites.slice(0);\n      list.splice(list.indexOf(movie), 1);\n      this.setState({\n        favourites: list\n      });\n      localStorage.setItem(\"altFav\", list);\n    };\n\n    this.clickedSearchAll = () => {\n      this.setState({\n        searchedAll: \"All\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.clickedSearchTitle = () => {\n      this.setState({\n        searchedAll: \"Title\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.sortAlpha = () => {\n      let tempMovie = Array.from(this.state.movies);\n      tempMovie.sort((a, b) => a.title - b.title);\n      this.setState({\n        movies: tempMovie\n      });\n      console.log(\"hi\");\n    };\n\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles: []\n    };\n  } //movie search by title\n\n\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n\n    this.updateState();\n  } //adding fav event handler\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(HomeView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        filterTitle: this.filterTitle,\n        searchTitle: this.searchTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/DefaultView\",\n      exact: true,\n      render: props => React.createElement(DefaultView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        filterTitle: this.filterTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CastView\",\n      exact: true,\n      render: props => React.createElement(CastView, {\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Chrisu/Desktop/web3assignment-master/ass-1/src/App.js"],"names":["React","HomeView","Header","Route","DefaultView","CSSTransition","Modal","CastView","App","Component","constructor","props","searchTitle","e","curList","newList","target","value","state","movies","filter","titles","lc","toLowerCase","includes","setState","filtered","filterTitle","titleFilter","filteredByTitles","newTitleFilter","titleName","title","indexOf","alert","toggleModal","isOpen","updateState","console","log","isLoading","localStorage","getItem","JSON","parse","handleAddFav","movie","currentFav","favourites","slice","newFav","push","id","setItem","find","m","handleDeleteFav","list","splice","clickedSearchAll","searchedAll","clickedSearchTitle","sortAlpha","tempMovie","Array","from","sort","a","b","IsOpen","altFav","componentsWillUpdate","json","stringify","componentDidMount","url","response","fetch","jsonData","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAarBC,WAbqB,GAaNC,CAAD,IAAO;AACnB,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,UAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAkB,EAAtB,EAAyB;AACvBH,QAAAA,OAAO,GAAG,KAAKI,KAAL,CAAWC,MAArB;AAEAJ,QAAAA,OAAO,GAAGD,OAAO,CAACM,MAAR,CAAeC,MAAM,IAAG;AAChC,gBAAMC,EAAE,GAAGD,MAAM,CAACE,WAAP,EAAX;AACA,gBAAMH,MAAM,GAAGP,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeM,WAAf,EAAf;AACA,iBAAOD,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP;AAED,SALS,CAAV;AAMD,OATD,MAUA;AACEL,QAAAA,OAAO,GAAG,KAAKG,KAAL,CAAWC,MAArB;AACD;;AACD,WAAKM,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEX;AADE,OAAd;AAGD,KAjCoB;;AAAA,SAmCnBY,WAnCmB,GAmCJC,WAAD,IAAgB;AAC5B,UAAIC,gBAAgB,GAAG,KAAKX,KAAL,CAAWC,MAAlC;AACA,UAAIW,cAAc,GAAGD,gBAAgB,CAACT,MAAjB,CAAyBD,MAAD,IAAW;AACtD,YAAIY,SAAS,GAAGZ,MAAM,CAACa,KAAP,CAAaT,WAAb,EAAhB;AACA,YAAIO,cAAc,GAAGF,WAAW,CAACL,WAAZ,EAArB;AACA,eAAQJ,MAAM,CAACc,OAAP,CAAeH,cAAc,KAAKC,SAAlC,CAAR;AACD,OAJoB,CAArB;AAKA,WAAKN,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACAK,MAAAA,KAAK,CAAC,KAAKhB,KAAL,CAAWW,gBAAZ,CAAL;AACG,KA5Cc;;AAAA,SA8CnBM,WA9CmB,GA8CL,MAAM;AAClB,WAAKV,QAAL,CAAc;AACZW,QAAAA,MAAM,EAAE,CAAC,KAAKlB,KAAL,CAAWkB;AADR,OAAd;AAGD,KAlDkB;;AAAA,SAyDnBC,WAzDmB,GAyDL,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWsB,SAAvB,EADkB,CAElB;;AACA,UAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,IAA1C,EAAgD;AAC9C;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,aAAKd,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAEwB,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADI;AAEZF,UAAAA,SAAS,EAAE;AAFC,SAAd,EAH8C,CAO9C;AACD,OARD,MAQO;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;AACF,KAvEkB;;AAAA,SA2FnBM,YA3FmB,GA2FJC,KAAK,IAAI;AACtB,UAAIC,UAAU,GAAG,KAAK7B,KAAL,CAAW8B,UAAX,CAAsBC,KAAtB,CAA4B,CAA5B,CAAjB;AACA,UAAIC,MAAM,GAAG,CAAC,GAAGH,UAAJ,CAAb;AAEAG,MAAAA,MAAM,CAACC,IAAP,CAAYL,KAAZ;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;;AACA,UAAI,CAACH,UAAU,CAACvB,QAAX,CAAoBsB,KAAK,CAACM,EAA1B,CAAL,EAAoC;AAClC,aAAK3B,QAAL,CAAc;AACZuB,UAAAA,UAAU,EAAEE;AADA,SAAd;AAGAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAW8B,UAAvB;AACAP,QAAAA,YAAY,CAACY,OAAb,CAAqB,QAArB,EAA+BH,MAA/B;AACD;;AACD,UAAI,KAAKhC,KAAL,CAAW8B,UAAX,CAAsBM,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,CAACvB,KAAF,KAAYc,KAAK,CAACd,KAAlD,CAAJ,EAA8D;AAC5D,aAAKwB,eAAL,CAAqBV,KAArB;AACD;AACF,KA5GkB;;AAAA,SA8GnBU,eA9GmB,GA8GDV,KAAK,IAAI;AACzB,YAAMW,IAAI,GAAG,KAAKvC,KAAL,CAAW8B,UAAX,CAAsBC,KAAtB,CAA4B,CAA5B,CAAb;AACAQ,MAAAA,IAAI,CAACC,MAAL,CAAYD,IAAI,CAACxB,OAAL,CAAaa,KAAb,CAAZ,EAAiC,CAAjC;AACA,WAAKrB,QAAL,CAAc;AACZuB,QAAAA,UAAU,EAAES;AADA,OAAd;AAGAhB,MAAAA,YAAY,CAACY,OAAb,CAAqB,QAArB,EAA+BI,IAA/B;AACD,KArHkB;;AAAA,SAuHnBE,gBAvHmB,GAuHA,MAAM;AACvB,WAAKlC,QAAL,CAAc;AACZmC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAW0C,WAAvB;AACD,KA5HkB;;AAAA,SA8HnBC,kBA9HmB,GA8HE,MAAM;AACzB,WAAKpC,QAAL,CAAc;AACZmC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAW0C,WAAvB;AACD,KAnIkB;;AAAA,SAqInBE,SArImB,GAqIP,MAAM;AAChB,UAAIC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAK/C,KAAL,CAAWC,MAAtB,CAAhB;AACA4C,MAAAA,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACnC,KAAF,GAAUoC,CAAC,CAACpC,KAArC;AACA,WAAKP,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAE4C;AAAV,OAAd;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KA1IkB;;AAEjB,SAAKrB,KAAL,GAAa;AACXsB,MAAAA,SAAS,EAAE,IADA;AAEXoB,MAAAA,WAAW,EAAE,KAFF;AAGXzC,MAAAA,MAAM,EAAE,EAHG;AAIXkD,MAAAA,MAAM,EAAE,KAJG;AAKXrB,MAAAA,UAAU,EAAE,EALD;AAMXsB,MAAAA,MAAM,EAAE,EANG;AAOXzC,MAAAA,gBAAgB,EAAC;AAPN,KAAb;AASD,GAZ+B,CAalC;;;AAuCE;AACA0C,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACzB;AACA/B,IAAAA,YAAY,CAACY,OAAb,CAAqB,WAArB,EAAkCV,IAAI,CAAC8B,SAAL,CAAeD,IAAf,CAAlC;AACD;;AAkBD,QAAME,iBAAN,GAA0B;AACxB,QAAIjC,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,IAA1C,EAAgD;AAC9C,UAAI;AACF,cAAMiC,GAAG,GACP,8EADF;AAEA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,cAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACJ,IAAT,EAAvB;AACA,aAAKD,oBAAL,CAA0BO,QAA1B;AACAxC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,OAPD,CAOE,OAAOwC,KAAP,EAAc;AACdzC,QAAAA,OAAO,CAACyC,KAAR,CAAcA,KAAd;AACD;AACF,KAXD,MAWO;AACLzC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AACD,SAAKF,WAAL;AACD,GA1F+B,CA2FlC;;;AAkDE2C,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,MAAM,EAAErE,KAAK,IACX,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKO,KAAL,CAAWC,MADrB;AAEE,QAAA,gBAAgB,EAAE,KAAKwC,gBAFzB;AAGE,QAAA,WAAW,EAAE,KAAKzC,KAAL,CAAW0C,WAH1B;AAIE,QAAA,kBAAkB,EAAE,KAAKC,kBAJ3B;AAKE,QAAA,SAAS,EAAE,KAAKC,SALlB;AAME,QAAA,WAAW,EAAE,KAAKnC,WANpB;AAOE,QAAA,WAAW,EAAG,KAAKf,WAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAgBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,MAAM,EAAED,KAAK,IACX,oBAAC,WAAD;AACE,QAAA,MAAM,EAAE,KAAKO,KAAL,CAAWC,MADrB;AAEE,QAAA,gBAAgB,EAAE,KAAKwC,gBAFzB;AAGE,QAAA,WAAW,EAAE,KAAKzC,KAAL,CAAW0C,WAH1B;AAIE,QAAA,kBAAkB,EAAE,KAAKC,kBAJ3B;AAKE,QAAA,SAAS,EAAE,KAAKC,SALlB;AAME,QAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWkB,MANnB;AAOE,QAAA,OAAO,EAAE,KAAKD,WAPhB;AAQE,QAAA,YAAY,EAAE,KAAKU,YARrB;AASE,QAAA,eAAe,EAAE,KAAKW,eATxB;AAUE,QAAA,UAAU,EAAE,KAAKtC,KAAL,CAAW8B,UAVzB;AAWE,QAAA,WAAW,EAAE,KAAKrB,WAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAmCG,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,WADN;AAEC,MAAA,KAAK,MAFN;AAGC,MAAA,MAAM,EAAEhB,KAAK,IACf,oBAAC,QAAD;AACM,QAAA,YAAY,EAAE,KAAKkC,YADzB;AAEM,QAAA,eAAe,EAAE,KAAKW,eAF5B;AAGM,QAAA,UAAU,EAAE,KAAKtC,KAAL,CAAW8B,UAH7B;AAIM,QAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWkB,MAJvB;AAKM,QAAA,OAAO,EAAE,KAAKD,WALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCH,EA8CE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWkB,MAAxB;AAAgC,MAAA,OAAO,EAAE,KAAKD,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CF,CADF,CADF;AAqDD;;AAnM+B;;AAsMlC,eAAe3B,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles:[]\n    };\n  }\n//movie search by title\nsearchTitle = (e) => {\n  let curList = [];\n  let newList = [];\n\n  if (e.target.value !==\"\"){\n    curList = this.state.movies;\n\n    newList = curList.filter(titles =>{\n      const lc = titles.toLowerCase();\n      const filter = e.target.value.toLowerCase();\n      return lc.includes(filter);\n\n    });\n  }else\n  {\n    newList = this.state.movies;\n  }\n  this.setState({\n    filtered: newList\n  });\n}\n  //movie filter by title\n  filterTitle = (titleFilter) =>{\n    let filteredByTitles = this.state.movies\n    let newTitleFilter = filteredByTitles.filter((movies) =>{\n      let titleName = movies.title.toLowerCase()\n      let newTitleFilter = titleFilter.toLowerCase()\n      return (movies.indexOf(newTitleFilter === titleName))\n    })\n    this.setState({filteredByTitles})\n    alert(this.state.filteredByTitles)\n      }\n   //checks modal state open or close\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  updateState = () => {\n    console.log(this.state.isLoading);\n    //Checks if local storage is set and if there is a state\n    if (localStorage.getItem(\"moviesAPI\") !== null) {\n      //this.sortLS();\n      console.log(\"API exists in Local Storage\");\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n        isLoading: false\n      });\n      // this.sortByTitle();\n    } else {\n      console.log(\"API does not exist in Local Storage\");\n    }\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url =\n          \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n    this.updateState();\n  }\n//adding fav event handler\n  handleAddFav = movie => {\n    let currentFav = this.state.favourites.slice(0);\n    let newFav = [...currentFav];\n\n    newFav.push(movie);\n\n    console.log(newFav);\n    if (!currentFav.includes(movie.id)) {\n      this.setState({\n        favourites: newFav\n      });\n      console.log(this.state.favourites);\n      localStorage.setItem(\"altFav\", newFav);\n    }\n    if (this.state.favourites.find(m => m.title === movie.title)) {\n      this.handleDeleteFav(movie);\n    }\n  };\n//removing fav handler\n  handleDeleteFav = movie => {\n    const list = this.state.favourites.slice(0);\n    list.splice(list.indexOf(movie), 1);\n    this.setState({\n      favourites: list\n    });\n    localStorage.setItem(\"altFav\", list);\n  };\n//checking if show all movie button pressed\n  clickedSearchAll = () => {\n    this.setState({\n      searchedAll: \"All\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//checking of filter by title button pressed\n  clickedSearchTitle = () => {\n    this.setState({\n      searchedAll: \"Title\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//sorting movies aray from json daya alphabetically\n  sortAlpha = () => {\n    let tempMovie = Array.from(this.state.movies);\n    tempMovie.sort((a, b) => a.title - b.title);\n    this.setState({ movies: tempMovie });\n    console.log(\"hi\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                filterTitle={this.filterTitle}\n                searchTitle ={this.searchTitle}\n              />\n            )}\n          />\n          <Route\n            path=\"/DefaultView\"\n            exact\n            render={props => (\n              <DefaultView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}\n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                filterTitle={this.filterTitle}\n              />\n            )}\n          />\n           <Route\n            path=\"/CastView\"\n            exact\n            render={props => (\n          <CastView  \n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}/>\n                )} />\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            </Modal>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}