{"ast":null,"code":"var _jsxFileName = \"G:\\\\web3assignment-master\\\\ass-1\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.searchTitle = e => {\n      let curList = [];\n      let newList = [];\n\n      if (e.target.value !== \"\") {\n        curList = this.state.movies;\n        newList = curList.filter(titles => {\n          const lc = titles.title.toLowerCase();\n          const filter = e.target.value.toLowerCase();\n          return lc.includes(filter);\n        });\n      } else {\n        newList = this.state.movies;\n      }\n\n      this.setState({\n        filteredByTitles: newList\n      });\n      console.log(this.state.filteredByTitles);\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.updateState = () => {\n      console.log(this.state.isLoading); //Checks if local storage is set and if there is a state\n\n      if (localStorage.getItem(\"moviesAPI\") !== null) {\n        //this.sortLS();\n        console.log(\"API exists in Local Storage\");\n        this.setState({\n          movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n          isLoading: false\n        }); // this.sortByTitle();\n      } else {\n        console.log(\"API does not exist in Local Storage\");\n      }\n    };\n\n    this.handleAddFav = movie => {\n      let currentFav = this.state.favourites.slice(0);\n      let newFav = [...currentFav];\n      newFav.push(movie);\n      console.log(newFav);\n\n      if (!currentFav.includes(movie.id)) {\n        this.setState({\n          favourites: newFav\n        });\n        console.log(this.state.favourites);\n        localStorage.setItem(\"altFav\", newFav);\n      }\n\n      if (this.state.favourites.find(m => m.title === movie.title)) {\n        this.handleDeleteFav(movie);\n      }\n    };\n\n    this.handleDeleteFav = movie => {\n      const list = this.state.favourites.slice(0);\n      list.splice(list.indexOf(movie), 1);\n      this.setState({\n        favourites: list\n      });\n      localStorage.setItem(\"altFav\", list);\n    };\n\n    this.clickedSearchAll = () => {\n      this.setState({\n        searchedAll: \"All\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.clickedSearchTitle = () => {\n      this.setState({\n        searchedAll: \"Title\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.sortAlpha = () => {\n      let tempMovie = Array.from(this.state.movies);\n      tempMovie.sort((a, b) => a.title - b.title);\n      this.setState({\n        movies: tempMovie\n      });\n      console.log(\"hi\");\n    };\n\n    this.checkSearchType = () => {\n      if (this.props.searchedAll == \"All\") {\n        this.state.listOfSearchedMovies = this.props.movies;\n      } else {\n        this.state.listOfSearchedMovies = this.props.filteredByTitle;\n      }\n    };\n\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles: [],\n      listOfSearchedMovies: []\n    };\n  } //movie search by title\n\n\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n\n    this.updateState();\n  } //adding fav event handler\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(HomeView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha //filterTitle={this.filterTitle}\n        ,\n        searchTitle: this.searchTitle,\n        checkSearchType: this.checkSearchType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/DefaultView\",\n      exact: true,\n      render: props => React.createElement(DefaultView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        filterTitle: this.filterTitle,\n        listofSearchedMovies: this.listOfSearchedMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CastView\",\n      exact: true,\n      render: props => React.createElement(CastView, {\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["G:/web3assignment-master/ass-1/src/App.js"],"names":["React","HomeView","Header","Route","DefaultView","CSSTransition","Modal","CastView","App","Component","constructor","props","searchTitle","e","curList","newList","target","value","state","movies","filter","titles","lc","title","toLowerCase","includes","setState","filteredByTitles","console","log","toggleModal","isOpen","updateState","isLoading","localStorage","getItem","JSON","parse","handleAddFav","movie","currentFav","favourites","slice","newFav","push","id","setItem","find","m","handleDeleteFav","list","splice","indexOf","clickedSearchAll","searchedAll","clickedSearchTitle","sortAlpha","tempMovie","Array","from","sort","a","b","checkSearchType","listOfSearchedMovies","filteredByTitle","IsOpen","altFav","componentsWillUpdate","json","stringify","componentDidMount","url","response","fetch","jsonData","error","render","filterTitle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles:[],\n      listOfSearchedMovies: []\n    };\n  }\n//movie search by title\nsearchTitle = (e) => {\n  let curList = [];\n  let newList = [];\n\n  if (e.target.value !==\"\"){\n    curList = this.state.movies;\n\n    newList = curList.filter(titles =>{\n      const lc = titles.title.toLowerCase();\n      const filter = e.target.value.toLowerCase();\n      return lc.includes(filter);\n\n    });\n  }else\n  {\n    newList = this.state.movies;\n  }\n  this.setState({\n    filteredByTitles: newList\n  });\n  console.log(this.state.filteredByTitles)\n}\n  //movie filter by title\n  /*filterTitle = (titleFilter) =>{\n    let filteredByTitles = this.state.movies\n    let newTitleFilter = filteredByTitles.filter((movies) =>{\n      let titleName = movies.title.toLowerCase()\n      let newTitleFilter = titleFilter.toLowerCase()\n      return (movies.indexOf(newTitleFilter === titleName))\n    })\n    this.setState({filteredByTitles})\n    alert(this.state.filteredByTitles)\n      }\n      */\n   //checks modal state open or close\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  updateState = () => {\n    console.log(this.state.isLoading);\n    //Checks if local storage is set and if there is a state\n    if (localStorage.getItem(\"moviesAPI\") !== null) {\n      //this.sortLS();\n      console.log(\"API exists in Local Storage\");\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n        isLoading: false\n      });\n      // this.sortByTitle();\n    } else {\n      console.log(\"API does not exist in Local Storage\");\n    }\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url =\n          \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n    this.updateState();\n  }\n//adding fav event handler\n  handleAddFav = movie => {\n    let currentFav = this.state.favourites.slice(0);\n    let newFav = [...currentFav];\n\n    newFav.push(movie);\n\n    console.log(newFav);\n    if (!currentFav.includes(movie.id)) {\n      this.setState({\n        favourites: newFav\n      });\n      console.log(this.state.favourites);\n      localStorage.setItem(\"altFav\", newFav);\n    }\n    if (this.state.favourites.find(m => m.title === movie.title)) {\n      this.handleDeleteFav(movie);\n    }\n  };\n//removing fav handler\n  handleDeleteFav = movie => {\n    const list = this.state.favourites.slice(0);\n    list.splice(list.indexOf(movie), 1);\n    this.setState({\n      favourites: list\n    });\n    localStorage.setItem(\"altFav\", list);\n  };\n//checking if show all movie button pressed\n  clickedSearchAll = () => {\n    this.setState({\n      searchedAll: \"All\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//checking of filter by title button pressed\n  clickedSearchTitle = () => {\n    this.setState({\n      searchedAll: \"Title\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//sorting movies aray from json daya alphabetically\n  sortAlpha = () => {\n    let tempMovie = Array.from(this.state.movies);\n    tempMovie.sort((a, b) => a.title - b.title);\n    this.setState({ movies: tempMovie });\n    console.log(\"hi\");\n  };\n  //fill in the array for if title is searched\n  checkSearchType = () => {\n    if (this.props.searchedAll == \"All\") {\n    this.state.listOfSearchedMovies = this.props.movies\n      \n    } else {\n      this.state.listOfSearchedMovies = this.props.filteredByTitle\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                //filterTitle={this.filterTitle}\n                searchTitle ={this.searchTitle}\n                checkSearchType={this.checkSearchType}\n              />\n            )}\n          />\n          <Route\n            path=\"/DefaultView\"\n            exact\n            render={props => (\n              <DefaultView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}\n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                filterTitle={this.filterTitle}\n                listofSearchedMovies={this.listOfSearchedMovies}\n              />\n            )}\n          />\n           <Route\n            path=\"/CastView\"\n            exact\n            render={props => (\n          <CastView  \n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}/>\n                )} />\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            </Modal>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}