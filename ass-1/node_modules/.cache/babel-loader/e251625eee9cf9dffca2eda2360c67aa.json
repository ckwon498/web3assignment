{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cee-Kay\\\\Desktop\\\\ass-1\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.updateState = () => {\n      console.log(this.state.isLoading); //Checks if local storage is set and if there is a state\n\n      if (localStorage.getItem(\"moviesAPI\") !== null) {\n        //this.sortLS();\n        console.log(\"API exists in Local Storage\");\n        this.setState({\n          movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n          isLoading: false\n        }); // this.sortByTitle();\n      } else {\n        console.log(\"API does not exist in Local Storage\");\n      }\n    };\n\n    this.handleAddFav = movie => {\n      let currentFav = this.state.favourites.slice(0);\n      let newFav = [...currentFav];\n      newFav.push(movie);\n      console.log(newFav);\n\n      if (!currentFav.includes(movie.id)) {\n        this.setState({\n          favourites: newFav\n        });\n        console.log(this.state.favourites);\n        localStorage.setItem(\"altFav\", newFav);\n      }\n\n      if (this.state.favourites.find(m => m.title === movie.title)) {\n        this.handleDeleteFav(movie);\n      }\n    };\n\n    this.handleDeleteFav = movie => {\n      const list = this.state.favourites.slice(0);\n      list.splice(list.indexOf(movie), 1);\n      this.setState({\n        favourites: list\n      });\n      localStorage.setItem(\"altFav\", list);\n    };\n\n    this.clickedSearchAll = () => {\n      this.setState({\n        searchedAll: \"All\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.clickedSearchTitle = () => {\n      this.setState({\n        searchedAll: \"Title\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.sortAlpha = () => {\n      // let tempMovie = Array.from(this.state.movies);\n      // tempMovie.sort((a, b) => a.title - b.title);\n      // this.setState({ movies: tempMovie });\n      console.log(\"hi\");\n    };\n\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: []\n    }; // this.clickedSearch = this.clickedSearch.bind(this);\n  }\n\n  //{ movies }\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n\n    this.updateState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(HomeView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/DefaultView\",\n      exact: true,\n      render: props => React.createElement(DefaultView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Programmer: Hoang Minh Vu - 201597301 | Chris Kwong - 2012334498\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Cee-Kay/Desktop/ass-1/src/App.js"],"names":["React","HomeView","Header","Route","DefaultView","CSSTransition","Modal","CastView","App","Component","constructor","props","toggleModal","setState","isOpen","state","updateState","console","log","isLoading","localStorage","getItem","movies","JSON","parse","handleAddFav","movie","currentFav","favourites","slice","newFav","push","includes","id","setItem","find","m","title","handleDeleteFav","list","splice","indexOf","clickedSearchAll","searchedAll","clickedSearchTitle","sortAlpha","IsOpen","altFav","componentsWillUpdate","json","stringify","componentDidMount","url","response","fetch","jsonData","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: []\n    };\n    // this.clickedSearch = this.clickedSearch.bind(this);\n  }\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  //{ movies }\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  updateState = () => {\n    console.log(this.state.isLoading);\n    //Checks if local storage is set and if there is a state\n    if (localStorage.getItem(\"moviesAPI\") !== null) {\n      //this.sortLS();\n      console.log(\"API exists in Local Storage\");\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n        isLoading: false\n      });\n      // this.sortByTitle();\n    } else {\n      console.log(\"API does not exist in Local Storage\");\n    }\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url =\n          \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n    this.updateState();\n  }\n\n  handleAddFav = movie => {\n    let currentFav = this.state.favourites.slice(0);\n    let newFav = [...currentFav];\n\n    newFav.push(movie);\n\n    console.log(newFav);\n    if (!currentFav.includes(movie.id)) {\n      this.setState({\n        favourites: newFav\n      });\n      console.log(this.state.favourites);\n      localStorage.setItem(\"altFav\", newFav);\n    }\n    if (this.state.favourites.find(m => m.title === movie.title)) {\n      this.handleDeleteFav(movie);\n    }\n  };\n\n  handleDeleteFav = movie => {\n    const list = this.state.favourites.slice(0);\n    list.splice(list.indexOf(movie), 1);\n    this.setState({\n      favourites: list\n    });\n    localStorage.setItem(\"altFav\", list);\n  };\n\n  clickedSearchAll = () => {\n    this.setState({\n      searchedAll: \"All\"\n    });\n    console.log(this.state.searchedAll);\n  };\n\n  clickedSearchTitle = () => {\n    this.setState({\n      searchedAll: \"Title\"\n    });\n    console.log(this.state.searchedAll);\n  };\n\n  sortAlpha = () => {\n    // let tempMovie = Array.from(this.state.movies);\n    // tempMovie.sort((a, b) => a.title - b.title);\n    // this.setState({ movies: tempMovie });\n    console.log(\"hi\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n              />\n            )}\n          />\n          <Route\n            path=\"/DefaultView\"\n            exact\n            render={props => (\n              <DefaultView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}\n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n              />\n            )}\n          />\n\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            Programmer: Hoang Minh Vu - 201597301 | Chris Kwong - 2012334498\n          </Modal>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}