{"ast":null,"code":"var _jsxFileName = \"/Users/Chrisu/Desktop/web3assignment-master/ass-1/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterTitle = titleFilter => {\n      let filteredByTitles = this.state.movies;\n      let newTitleFilter = filteredByTitles.filter(movies => {\n        let titleName = movies.title.toLowerCase();\n        return movies.indexOf(titleFilter.toLowerCase() === titleName);\n      });\n      this.setState({\n        filteredByTitles\n      });\n      alert(this.state.filteredByTitles);\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.updateState = () => {\n      console.log(this.state.isLoading); //Checks if local storage is set and if there is a state\n\n      if (localStorage.getItem(\"moviesAPI\") !== null) {\n        //this.sortLS();\n        console.log(\"API exists in Local Storage\");\n        this.setState({\n          movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n          isLoading: false\n        }); // this.sortByTitle();\n      } else {\n        console.log(\"API does not exist in Local Storage\");\n      }\n    };\n\n    this.handleAddFav = movie => {\n      let currentFav = this.state.favourites.slice(0);\n      let newFav = [...currentFav];\n      newFav.push(movie);\n      console.log(newFav);\n\n      if (!currentFav.includes(movie.id)) {\n        this.setState({\n          favourites: newFav\n        });\n        console.log(this.state.favourites);\n        localStorage.setItem(\"altFav\", newFav);\n      }\n\n      if (this.state.favourites.find(m => m.title === movie.title)) {\n        this.handleDeleteFav(movie);\n      }\n    };\n\n    this.handleDeleteFav = movie => {\n      const list = this.state.favourites.slice(0);\n      list.splice(list.indexOf(movie), 1);\n      this.setState({\n        favourites: list\n      });\n      localStorage.setItem(\"altFav\", list);\n    };\n\n    this.clickedSearchAll = () => {\n      this.setState({\n        searchedAll: \"All\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.clickedSearchTitle = () => {\n      this.setState({\n        searchedAll: \"Title\"\n      });\n      console.log(this.state.searchedAll);\n    };\n\n    this.sortAlpha = () => {\n      let tempMovie = Array.from(this.state.movies);\n      tempMovie.sort((a, b) => a.title - b.title);\n      this.setState({\n        movies: tempMovie\n      });\n      console.log(\"hi\");\n    };\n\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles: []\n    };\n  } //movie filter by title\n\n\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n\n    this.updateState();\n  } //adding fav event handler\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(HomeView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        filterTitle: this.filterTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/DefaultView\",\n      exact: true,\n      render: props => React.createElement(DefaultView, {\n        movies: this.state.movies,\n        clickedSearchAll: this.clickedSearchAll,\n        searchedAll: this.state.searchedAll,\n        clickedSearchTitle: this.clickedSearchTitle,\n        sortAlpha: this.sortAlpha,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        filterTitle: this.filterTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/CastView\",\n      exact: true,\n      render: props => React.createElement(CastView, {\n        handleAddFav: this.handleAddFav,\n        handleDeleteFav: this.handleDeleteFav,\n        favourites: this.state.favourites,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Chrisu/Desktop/web3assignment-master/ass-1/src/App.js"],"names":["React","HomeView","Header","Route","DefaultView","CSSTransition","Modal","CastView","App","Component","constructor","props","filterTitle","titleFilter","filteredByTitles","state","movies","newTitleFilter","filter","titleName","title","toLowerCase","indexOf","setState","alert","toggleModal","isOpen","updateState","console","log","isLoading","localStorage","getItem","JSON","parse","handleAddFav","movie","currentFav","favourites","slice","newFav","push","includes","id","setItem","find","m","handleDeleteFav","list","splice","clickedSearchAll","searchedAll","clickedSearchTitle","sortAlpha","tempMovie","Array","from","sort","a","b","IsOpen","altFav","componentsWillUpdate","json","stringify","componentDidMount","url","response","fetch","jsonData","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles:[]\n    };\n  }\n\n  //movie filter by title\n  filterTitle = (titleFilter) =>{\n    let filteredByTitles = this.state.movies\n    let newTitleFilter = filteredByTitles.filter((movies) =>{\n      let titleName = movies.title.toLowerCase()\n      \n      return (movies.indexOf(titleFilter.toLowerCase() === titleName))\n    })\n    this.setState({filteredByTitles})\n    alert(this.state.filteredByTitles)\n      }\n   //checks modal state open or close\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  updateState = () => {\n    console.log(this.state.isLoading);\n    //Checks if local storage is set and if there is a state\n    if (localStorage.getItem(\"moviesAPI\") !== null) {\n      //this.sortLS();\n      console.log(\"API exists in Local Storage\");\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n        isLoading: false\n      });\n      // this.sortByTitle();\n    } else {\n      console.log(\"API does not exist in Local Storage\");\n    }\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url =\n          \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n    this.updateState();\n  }\n//adding fav event handler\n  handleAddFav = movie => {\n    let currentFav = this.state.favourites.slice(0);\n    let newFav = [...currentFav];\n\n    newFav.push(movie);\n\n    console.log(newFav);\n    if (!currentFav.includes(movie.id)) {\n      this.setState({\n        favourites: newFav\n      });\n      console.log(this.state.favourites);\n      localStorage.setItem(\"altFav\", newFav);\n    }\n    if (this.state.favourites.find(m => m.title === movie.title)) {\n      this.handleDeleteFav(movie);\n    }\n  };\n//removing fav handler\n  handleDeleteFav = movie => {\n    const list = this.state.favourites.slice(0);\n    list.splice(list.indexOf(movie), 1);\n    this.setState({\n      favourites: list\n    });\n    localStorage.setItem(\"altFav\", list);\n  };\n//checking if show all movie button pressed\n  clickedSearchAll = () => {\n    this.setState({\n      searchedAll: \"All\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//checking of filter by title button pressed\n  clickedSearchTitle = () => {\n    this.setState({\n      searchedAll: \"Title\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//sorting movies aray from json daya alphabetically\n  sortAlpha = () => {\n    let tempMovie = Array.from(this.state.movies);\n    tempMovie.sort((a, b) => a.title - b.title);\n    this.setState({ movies: tempMovie });\n    console.log(\"hi\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                filterTitle={this.filterTitle}\n              />\n            )}\n          />\n          <Route\n            path=\"/DefaultView\"\n            exact\n            render={props => (\n              <DefaultView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}\n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                filterTitle={this.filterTitle}\n              />\n            )}\n          />\n           <Route\n            path=\"/CastView\"\n            exact\n            render={props => (\n          <CastView  \n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}/>\n                )} />\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            </Modal>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}