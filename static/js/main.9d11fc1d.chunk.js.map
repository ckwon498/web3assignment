{"version":3,"sources":["logo.svg","components/Modal.js","components/Header.js","components/FavouritesToken.js","components/Favourites.js","components/MovieFilters.js","components/MatchedMovie.js","components/ListMatches.js","components/CastView.js","components/DefaultView.js","components/HomeView.js","components/SearchFilter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","this","props","show","className","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","maxWidth","minHeight","margin","children","onClick","onClose","React","Component","Header","handleClick","to","src","alt","FavouritesToken","handleDelete","handleDeleteFav","movie","poster","Favourites","favourites","map","m","i","key","MovieFilters","type","name","value","min","max","MatchedMovie","sortBy","handleHeart","handleAddFav","eachMovie","handleCursorHover","e","target","background","id","title","year","ratings","average","ListMatches","movies","searchedAll","release_date","CastView","handleShowAll","viewHome","isOpen","DefaultView","TransitionGroup","CSSTransition","timeout","classNames","sortASC","HomeView","clickedSearchAll","console","log","handleTitleSearch","preventDefault","state","alert","titleInp","handleTitleInput","val","setState","backgroundImage","height","backgroundSize","backgroundPosition","onChange","App","filterTitle","titleFilter","filteredByTitles","filter","titles","toLowerCase","indexOf","toggleModal","updateState","isLoading","localStorage","getItem","JSON","parse","currentFav","slice","newFav","push","includes","setItem","find","list","splice","clickedSearchTitle","sortAlpha","tempMovie","Array","from","sort","a","b","IsOpen","altFav","json","stringify","fetch","response","jsonData","componentsWillUpdate","error","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9d11fc1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// referenced code from https://daveceddia.com/open-modal-in-react/\r\nclass Modal extends React.Component {\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if (!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: \"fixed\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: \"rgba(0,0,0,0.3)\",\r\n      padding: 50\r\n    };\r\n\r\n    // The modal \"window\"\r\n    const modalStyle = {\r\n      backgroundColor: \"#fff\",\r\n      borderRadius: 5,\r\n      maxWidth: 500,\r\n      minHeight: 300,\r\n      margin: \"0 auto\",\r\n      padding: 30\r\n    };\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={backdropStyle}>\r\n        <div className=\"modal\" style={modalStyle}>\r\n          {this.props.children}\r\n        <h4>Programmer:</h4>\r\n        <p>Hoang Minh Vu - 201597301 | Chris Kwong - 2012334498</p>\r\n        <h4>Git Hub</h4>\r\n        <p>https://github.com/ckwon498/Web3Assignment1.git</p>\r\n          <div className=\"footer\">\r\n            <button onClick={this.props.onClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Header.css\";\r\nimport Modal from \"./Modal.js\";\r\n\r\nclass Header extends React.Component {\r\n  handleClick = () => {\r\n    this.props.onClose();\r\n  };\r\n  render() {\r\n    let logoIMG =\r\n      \"https://pbs.twimg.com/profile_images/1175994146/bigm-twitter_400x400.png\";\r\n    return (\r\n      <div className=\"header\">\r\n        <div>\r\n          <Link to=\"/\">\r\n            <img src={logoIMG} alt=\"Logo\" />\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <button className=\"about\" onClick={this.handleClick}>\r\n            About\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass FavouritesToken extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.props.handleDeleteFav(this.props.movie);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"FavouritesTokenDiv\">\r\n        <Link to= \"/MovieDetailsView\">\r\n        <div className=\"favPhoto\">\r\n         <img\r\n            src={\"https://image.tmdb.org/t/p/w185\" + this.props.movie.poster}\r\n          />\r\n        </div>\r\n        </Link>\r\n        <div className=\"deleteFavButton\">\r\n          <button onClick={this.handleDelete}>Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FavouritesToken;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FavouritesToken from \"./FavouritesToken\";\r\n\r\nconst Favourites = ({ handleDeleteFav, favourites }) => (\r\n  <div className=\"favourites-container\">\r\n    <h3>Favorites</h3>\r\n    {favourites.map((m, i) => (\r\n      <FavouritesToken movie={m} key={i} handleDeleteFav={handleDeleteFav} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Favourites;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Filter.css\";\r\n\r\nclass MovieFilters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MovieFilter\">\r\n        <h2>Movie Filter</h2>\r\n        <form>\r\n          <div className=\"TitleFilter\">\r\n            <h3>Title</h3>\r\n            <input type=\"text\" name=\"title\" />\r\n          </div>\r\n\r\n          <div className=\"YearFilter\">\r\n            <h3>Year</h3>\r\n            <input type=\"radio\" name=\"Year\" value=\"before\" />\r\n            <label> Before </label>\r\n            <input type=\"text\" name=\"before-year\" />\r\n            <br />\r\n\r\n            <input type=\"radio\" name=\"Year\" value=\"after\" />\r\n            <label> After </label>\r\n            <input type=\"text\" name=\"after-year\" />\r\n            <br />\r\n\r\n            <input type=\"radio\" name=\"Year\" value=\"between\" />\r\n            <label> Between </label>\r\n            <input type=\"text\" name=\"between-year-1\" />\r\n            <br />\r\n            <input type=\"text\" name=\"between-year-2\" />\r\n            <br />\r\n          </div>\r\n\r\n          <div className=\"RatingFilter\">\r\n            <h3>Rating</h3>\r\n            <input type=\"radio\" name=\"Rating\" value=\"below\" />\r\n            <label>Below</label>\r\n            <input type=\"range\" min=\"0\" max=\"10\" className=\"slider\" />\r\n            <br />\r\n\r\n            <input type=\"radio\" name=\"Rating\" value=\"above\" />\r\n            <label>Above</label>\r\n            <input type=\"range\" min=\"0\" max=\"10\" className=\"slider\" />\r\n            <br />\r\n\r\n            <input type=\"radio\" name=\"Rating\" value=\"between\" />\r\n            <label>Between</label>\r\n            <input type=\"range\" min=\"0\" max=\"10\" className=\"slider\" />\r\n            <input type=\"range\" min=\"0\" max=\"10\" className=\"slider\" />\r\n            <br />\r\n          </div>\r\n          <div className = \"submitFilter\">\r\n          <input type=\"submit\" name=\"Filter\" value=\"Filter\" />\r\n          <button>Clear</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MovieFilters;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favourites from \"./Favourites\";\r\n\r\nclass MatchedMovie extends React.Component {\r\n  sortBy = () => {};\r\n\r\n  handleHeart = () => {\r\n    this.props.handleAddFav(this.props.eachMovie);\r\n  };\r\n\r\n  handleCursorHover = (e) => {\r\n    e.target.style.background = 'red';\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"eachMovie\">\r\n        <figure id=\"matchedMoviePosterFig\">\r\n          <img id=\"matchedMoviePoster\" src={\"https://image.tmdb.org/t/p/w342\" + this.props.poster} />\r\n        </figure>\r\n        <div>\r\n          <h3 id=\"matchedMovieTitle\">{this.props.title}</h3>\r\n          <h4>{this.props.year}</h4>\r\n          <p>{this.props.ratings.average}</p>\r\n          <div>\r\n            <button className=\"heartButton\" onClick={this.handleHeart}>\r\n              ♥\r\n            </button>\r\n            <Link to=\"/Castview\">\r\n            <button className=\"viewButton\">View</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MatchedMovie;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MatchedMovie from \"./MatchedMovie\";\r\n\r\nclass ListMatches extends React.Component {\r\n  /*checkSearchType() {\r\n    if (this.props.searchedAll == \"All\") {\r\n    } else {\r\n    }\r\n  }*/\r\n  render() {\r\n    let loadingImgURL =\r\n      \"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\";\r\n    return (\r\n      <div className=\"matchedList\">\r\n        <ul>\r\n          {this.props.movies.map((m, key) => (\r\n            <MatchedMovie\r\n              movies={this.props.movies}\r\n              searchedAll={this.searchedAll}\r\n              key={m.id}\r\n              title={m.title}\r\n              ratings={m.ratings.average}\r\n              year={m.release_date}\r\n              poster={m.poster}\r\n              eachMovie={m}\r\n              handleAddFav={this.props.handleAddFav}\r\n              handleDeleteFav={this.props.handleDeleteFav}\r\n              favourites={this.props.favourites}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ListMatches;\r\n","import React from \"react\";\r\nimport Favourites from \"./Favourites.js\";\r\nimport Header from \"./Header.js\";\r\nimport { Link } from \"react-router-dom\";\r\nclass CastView extends React.Component {\r\n  handleShowAll = () => {\r\n    this.props.viewHome();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <Header show={this.props.isOpen} onClose={this.props.onClose}/>\r\n          <Favourites\r\n            handleDeleteFav={this.props.handleDeleteFav}\r\n            favourites={this.props.favourites}\r\n          />\r\n          <div className =\"castNameContainer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CastView;\r\n","import React from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Favourites from \"./Favourites.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieFilters from \"./MovieFilters\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ListMatches from \"./ListMatches\";\r\nimport CastView from \"./CastView.js\";\r\n\r\n\r\nclass DefaultView extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"top-header\">\r\n          <Header show={this.props.isOpen} onClose={this.props.onClose} />\r\n          \r\n        </div>\r\n        <div className=\"favorite-header\">\r\n          <Favourites\r\n            handleDeleteFav={this.props.handleDeleteFav}\r\n            favourites={this.props.favourites}\r\n          />\r\n          </div>\r\n        <TransitionGroup className=\"movieFilters\">\r\n          <CSSTransition timeout={300} classNames=\"fade\">\r\n            <MovieFilters />\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <div>\r\n          \r\n        <ListMatches\r\n          movies={this.props.movies}\r\n          searchedAll={this.props.searchedAll}\r\n          sortASC={this.props.sortASC}\r\n          handleAddFav={this.props.handleAddFav}\r\n          favourites={this.props.favourites}\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DefaultView;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DefaultView from \"./DefaultView.js\";\r\nimport \"./css/HomeView.css\";\r\nimport SearchFilter from \"./SearchFilter\";\r\n\r\nclass HomeView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { titleInp: \"\" };\r\n  }\r\n  handleShowAll = () => {\r\n    //    this.props.SortAlpha();\r\n    this.props.clickedSearchAll();\r\n    console.log(this.props.movies);\r\n  };\r\n  handleTitleSearch = e => {\r\n    e.preventDefault();\r\n    var title = this.state.title;\r\n    alert('You enetered \"' + this.state.titleInp + '\" but our title filter is undergoing maintenance please try again later');\r\n    \r\n  };\r\n  handleTitleInput = val => {\r\n    this.setState({\r\n      titleInp: val.target.value\r\n    });\r\n   \r\n  };\r\n\r\n  render() {\r\n    let bckURL =\r\n      \"https://i0.wp.com/twinfinite.net/wp-content/uploads/2018/12/Granblue-1.jpg?w=1920&ssl=1\";\r\n    // let posterIMG = `https://image.tmdb.org/t/p/w185${this.props.movies.poster}`;\r\n\r\n    return (\r\n      <div\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundImage: `url(${bckURL})`,\r\n          height: \"1000px\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center center\",\r\n          //backgroundRepeat: \"no-repeat\"\r\n        }}\r\n      >\r\n        <div className=\"home-box\">\r\n          <h1>Movie Browser</h1>\r\n          <form className=\"title-search\">\r\n            Title{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              id=\"searchInput\"\r\n              name=\"title\"\r\n              onChange={val => this.handleTitleInput(val)}\r\n            />\r\n            <div>\r\n              <Link to=\"/DefaultView\">\r\n                <button onClick={this.handleTitleSearch} titleInp={this.state.titleInp}>\r\n                  Search Matching Movies\r\n                </button>\r\n              </Link>\r\n              <Link to=\"/DefaultView\">\r\n                <button onClick={this.handleShowAll}>Show All Movies</button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"homeFooter\">\r\n            {/* <DefaultView title={this.props.title} />; */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HomeView;\r\n","import React from \"react\";\r\n/*this.props.filterYear;\r\n  this.props.filterRating;*/\r\nclass SearchFilter extends React.Component {\r\n  match = this.props.movies.filter(m => m.title === this.props.titleInp);\r\n  title = this.props.titleInp;\r\n}\r\n\r\nexport default SearchFilter;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView.js\";\nimport Header from \"./components/Header.js\";\nimport { Route } from \"react-router-dom\";\nimport DefaultView from \"./components/DefaultView.js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Modal from \"./components/Modal.js\";\nimport CastView from \"./components/CastView\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      searchedAll: \"All\",\n      movies: [],\n      IsOpen: false,\n      favourites: [],\n      altFav: [],\n      filteredByTitles:[]\n    };\n  }\n\n  //movie filter by title\n  filterTitle = (titleFilter) =>{\n    let filteredByTitles = this.state.movies\n    filteredByTitles = filteredByTitles.filter((titles) =>{\n      let titleName = titles.title.toLowerCase()\n      return titleName.indexOf(titleFilter.toLowerCase()) !== -1\n    })\n    this.setState({filteredByTitles})\n      }\n   //checks modal state open or close\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  //moveis data\n  componentsWillUpdate(json) {\n    //Converts fetched JSON data into string and store in local storage\n    localStorage.setItem(\"moviesAPI\", JSON.stringify(json));\n  }\n\n  updateState = () => {\n    console.log(this.state.isLoading);\n    //Checks if local storage is set and if there is a state\n    if (localStorage.getItem(\"moviesAPI\") !== null) {\n      //this.sortLS();\n      console.log(\"API exists in Local Storage\");\n      this.setState({\n        movies: JSON.parse(localStorage.getItem(\"moviesAPI\")),\n        isLoading: false\n      });\n      // this.sortByTitle();\n    } else {\n      console.log(\"API does not exist in Local Storage\");\n    }\n  };\n\n  async componentDidMount() {\n    if (localStorage.getItem(\"moviesAPI\") === null) {\n      try {\n        const url =\n          \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        this.componentsWillUpdate(jsonData);\n        console.log(\"Fetched Data Successful. \");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Data already loaded.\");\n    }\n    this.updateState();\n  }\n//adding fav event handler\n  handleAddFav = movie => {\n    let currentFav = this.state.favourites.slice(0);\n    let newFav = [...currentFav];\n\n    newFav.push(movie);\n\n    console.log(newFav);\n    if (!currentFav.includes(movie.id)) {\n      this.setState({\n        favourites: newFav\n      });\n      console.log(this.state.favourites);\n      localStorage.setItem(\"altFav\", newFav);\n    }\n    if (this.state.favourites.find(m => m.title === movie.title)) {\n      this.handleDeleteFav(movie);\n    }\n  };\n//removing fav handler\n  handleDeleteFav = movie => {\n    const list = this.state.favourites.slice(0);\n    list.splice(list.indexOf(movie), 1);\n    this.setState({\n      favourites: list\n    });\n    localStorage.setItem(\"altFav\", list);\n  };\n//checking if show all movie button pressed\n  clickedSearchAll = () => {\n    this.setState({\n      searchedAll: \"All\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//checking of filter by title button pressed\n  clickedSearchTitle = () => {\n    this.setState({\n      searchedAll: \"Title\"\n    });\n    console.log(this.state.searchedAll);\n  };\n//sorting movies aray from json daya alphabetically\n  sortAlpha = () => {\n    let tempMovie = Array.from(this.state.movies);\n    tempMovie.sort((a, b) => a.title - b.title);\n    this.setState({ movies: tempMovie });\n    console.log(\"hi\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <HomeView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                filterTitle={this.filterTitle}\n              />\n            )}\n          />\n          <Route\n            path=\"/DefaultView\"\n            exact\n            render={props => (\n              <DefaultView\n                movies={this.state.movies}\n                clickedSearchAll={this.clickedSearchAll}\n                searchedAll={this.state.searchedAll}\n                clickedSearchTitle={this.clickedSearchTitle}\n                sortAlpha={this.sortAlpha}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}\n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n              />\n            )}\n          />\n           <Route\n            path=\"/CastView\"\n            exact\n            render={props => (\n          <CastView  \n                handleAddFav={this.handleAddFav}\n                handleDeleteFav={this.handleDeleteFav}\n                favourites={this.state.favourites}\n                show={this.state.isOpen}\n                onClose={this.toggleModal}/>\n                )} />\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            </Modal>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}